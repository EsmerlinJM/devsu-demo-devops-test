deployment:
  replicaCount: 1
  strategy:
    type: RollingUpdate
    maxSurge: 50%
    maxUnavailable: 25%

containers:
  ports:
    - containerPort: 8000
      protocol: TCP

image:
  repository: "node"
  tag: ""
  pullPolicy: IfNotPresent
  requests:    
    cpu: 100m
    memory: 250Mi
  env:
    enabled: true
    configMaps:
      - name: ENVIRONMENT
        keyRef: environment
    secrets:
      - name: DATABASE_NAME
        keyRef: database_name
      - name: DATABASE_USER
        keyRef: database_user
      - name: DATABASE_PASSWORD
        keyRef: database_password

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8000
  externalIp:
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /ping

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 100Mi
  # requests:
  #   cpu: 100m
  #   memory: 250Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

probes:
  enabled: false
  liveness:
    path: /ping
    initialDelaySeconds: 20
    periodSeconds: 60
  readiness:
    path: /ping
    initialDelaySeconds: 5
    periodSeconds: 5
  startup:
    path: /ping
    failureThreshold: 3
    periodSeconds: 3

# Values environment in configmap
configmap:
  data:
    environment: ""

# Values environment in secrets
secret:
  data:
    database_name: ""
    database_user: ""
    database_password: ""

ingress:
  enabled: false
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: devsu-test-ingress-lb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-path: "/ping"
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port  
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '3'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '5'  
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:354918395475:certificate/932e95c7-2295-414f-9d56-f763c2fc876a
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    external-dns.alpha.kubernetes.io/hostname: dev.esmerlinmieses.com
  hosts:
    - host: "dev.esmerlinmieses.com"
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
      - "dev.esmerlinmieses.com"
      secretName: sample-app-tls