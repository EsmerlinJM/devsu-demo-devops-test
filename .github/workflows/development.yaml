name: Deploy deployment enviroment
on:
  pull_request:
    branches:
    - main
    paths:
      - application/**/*
      - "**/*.js"
      - "package.json"
      - "package-lock.json"
      - "Dockerfile"
      - ".github/workflows/development.yml"
      - ".github/workflows/clean.yml"
    types: [opened, synchronize, reopened, labeled]

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  test:
    name: 'Test project'
    runs-on: ubuntu-latest
    environment: development
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Audit npm Packages
      run: |-
        npm audit
      continue-on-error: true
    
    - name: Unit Testing and Code Coverage
      run: |-
        npm i jest
        npm run coverage

  build:
    name: Build and Push to GCR
    runs-on: ubuntu-latest
    environment: production
    needs: [test]
    steps:

    - name: Set image hash to env
      id: vars
      run: echo "GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
  
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and tag image
      id: build-image
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REPOSITORY_URL }}
        IMAGE_NAME: 'devsu-test-nodejs'
      run: |
        # Build a docker container and push it to ECR
        echo "Building image $ECR_REGISTRY/$IMAGE_NAME:${{ env.GIT_HASH }}"
        docker build -t $ECR_REGISTRY/$IMAGE_NAME:${{ env.GIT_HASH }} .

        # echo "Pushing image $IMAGE_NAME:${{ env.GIT_HASH }} to AWS ECR"
        # docker push $ECR_REGISTRY/$IMAGE_NAME:${{ env.GIT_HASH }}

    - name: Scan image with Trivy
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: $ECR_REGISTRY/$IMAGE_NAME:${{ env.GIT_HASH }}
        format: "table"
        severity: "CRITICAL,HIGH"
        vuln-type: 'os,library'
        exit-code: 1

    

