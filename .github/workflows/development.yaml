name: Deploy development enviroment
on:
  workflow_dispatch:
  pull_request:
    branches:
    - main
    paths:
      - application/**/*
      - "**/*.js"
      - "package.json"
      - "package-lock.json"
      - "Dockerfile"
      - ".github/workflows/development.yaml"
      - ".github/workflows/build.yaml"
      - ".github/workflows/deploy.yaml"
      - ".github/workflows/post-deploy.yaml"
      - ".github/workflows/clean.yaml"
    types: [opened, synchronize, reopened, labeled]

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  test:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'no-action') }}
    name: 'Test project'
    runs-on: ubuntu-24.04
    environment: development
    defaults:
      run:
        working-directory: application
    outputs:
      short_sha: ${{ steps.shorten_sha.outputs.short_sha }}
      image_tag: ${{ steps.image_info.outputs.image_tag }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Clean install modules
      run: npm ci
    
    - name: Unit Testing and Code Coverage
      run: |-
        npm i jest
        npm run coverage

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4.2.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: application/
        args: >
          -Dsonar.projectKey=EsmerlinJM_devsu-demo-devops-test
          -Dsonar.organization=esmerlinjm
          -Dsonar.sources=.
          -Dsonar.dynamicAnalysis=reuseReports
          -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
          -Dsonar.language="javascript" 
      continue-on-error: true

    - name: Shorten commit SHA
      id: shorten_sha
      run: |
        SHORTEN_SHA=$(echo "${{ github.head_ref }}" | sha256sum | cut -c 1-5)
        echo "short_sha=$SHORTEN_SHA" >> $GITHUB_OUTPUT

    - name: Setting image info
      id: image_info
      run: |
        echo "image_tag=devsu-test-nodejs-dev-${{ steps.shorten_sha.outputs.short_sha }}" >> $GITHUB_OUTPUT

  build-and-push:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'no-action') }}
    needs:
    - test
    uses: ./.github/workflows/build.yaml
    with:
      working_directory: application/
      environment: development
      image_tag: ${{ needs.test.outputs.image_tag }}
    secrets: inherit
    
  deploy:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'no-action') }}
    needs:
    - test
    - build-and-push
    uses: ./.github/workflows/deploy.yaml
    with:
      working_directory: application/helmchart
      environment: development
      image_tag: ${{ needs.test.outputs.image_tag }}
      deployment_name: devsu-test-nodejs-dev-${{ needs.test.outputs.short_sha }}
      service_type: NodePort
      namespace: devsu-test-nodejs-dev-${{ needs.test.outputs.short_sha }}
    secrets: inherit

  post-deploy:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'no-action') }}
    needs:
    - test
    - build-and-push
    - deploy
    uses: ./.github/workflows/post-deploy.yaml
    with:
      environment: development
      deployment_name: devsu-test-nodejs-dev-${{ needs.test.outputs.short_sha }}
    secrets: inherit
    

    

