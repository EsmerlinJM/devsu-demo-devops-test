name: Deploy app to EKS
on:
  workflow_call:
    inputs:
      deployment_name: 
        required: false
        type: string
        default: ${{ github.event.repository.name }}
      image_tag:
        required: true
        type: string
      working_directory:
        required: false
        type: string
        default: application/helmchart
      environment:
        required: false
        type: string
        default: staging
      service_type:
        required: false
        type: string
        default: LoadBalancer
      namespace:
        required: false
        type: string
        default: development

jobs:
  deploy:
    name: Deploy app to EKS
    runs-on: ubuntu-24.04
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      id: configure-aws-credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Update kubeconfig file with EKS
      run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION || 'us-east-1' }} --name ${{ secrets.CLUSTER_NAME }}

    - name: Get ACM Certificate ARN
      id: certificate_arn
      run: |
          DOMAIN="${{ secrets.DOMAIN_NAME }}"
          CERTIFICATE_ARN=$(aws acm list-certificates --query "CertificateSummaryList[?DomainName=='$DOMAIN'].CertificateArn" --output text)
      
          echo "::add-mask::$CERTIFICATE_ARN"
          echo "certificate_arn=$CERTIFICATE_ARN" >> $GITHUB_OUTPUT

    - name: Deploy helm chart
      run: |
        helm upgrade --install "${{ inputs.deployment_name }}" . \
        --namespace "${{ inputs.namespace }}" \
        --create-namespace \
        --set image.repository="${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY || 'devsu-test-repository' }}" \
        --set image.tag="${{ inputs.image_tag }}" \
        --set configMap.data.environment="${{ inputs.environment }}" \
        --set service.type="${{ inputs.service_type }}" \
        --set secret.data.database_name="${{ secrets.DATABASE_NAME }}" \
        --set secret.data.database_user="${{ secrets.DATABASE_USER }}" \
        --set secret.data.database_password="${{ secrets.DATABASE_PASSWORD }}" \
        --set ingress.enabled=true \
        --set ingress.annotations."alb\.ingress\.kubernetes\.io/load-balancer-name"="${{ inputs.deployment_name }}-lb" \
        --set ingress.tls[0].hosts[0]="${{ inputs.deployment_name }}.${{ secrets.DOMAIN_NAME }}" \
        --set ingress.annotations."alb\.ingress\.kubernetes\.io/certificate-arn"="${{ steps.certificate_arn.outputs.certificate_arn }}" \
        --set ingress.tls[0].secretName="${{ inputs.deployment_name }}-tls" \
        --set ingress.annotations."external-dns\.alpha\.kubernetes\.io/hostname"="${{ inputs.deployment_name }}.${{ secrets.DOMAIN_NAME }}" \
        --set probes.enabled=true \
        --wait-for-jobs --atomic --force
